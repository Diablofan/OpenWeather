@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <form asp-page="/Weather" method="post">
        <label for="nameOrPostCodeLookup">Enter City, State / Zip Code</label>
        <input id="nameOrPostCodeLookup" name="nameOrPostCodeLookup" type="text" />
        <input type="submit" />
        <br />
        <label for="countryCode">Country</label>
        <select name="country" title="Country Selection">
            @foreach(var countryCode in Model.CountryCodes)
            {
                <option value="@countryCode.Value">@countryCode.Key</option>
            }
        </select>
        <br /><br />
    </form>
    <form asp-page="/Weather" method="post" id="geolocForm">
        <label for="locationLookup">Look up by geolocation</label>
        <button type="button" id="locationLookup" title="Look up by geolocation"><i class="bi bi-search"></i></button>
        <input type="hidden" name="lat" id="loc_lat" />
        <input type="hidden" name="lon" id="loc_lon" />
    </form>
</div>

<script>
    if(navigator.geolocation) {
        // Adapts JS Geolocation API to Async/await
        function getCoordinates() {
            return new Promise(function(resolve, reject) {
                navigator.geolocation.getCurrentPosition(resolve, reject);
            });
        }

        locationLookup.addEventListener('click', async () => {
            let { coords: { latitude, longitude } } = await getCoordinates();
            loc_lat.value = latitude;
            loc_lon.value = longitude;
            geolocForm.submit();
        }); 
    }
</script>
